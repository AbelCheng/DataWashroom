CREATE OR REPLACE TRIGGER VPI.TRG_WASH_ISTR_MUP_MK
BEFORE INSERT OR UPDATE ON VPI.WASH_ISTR_MUP_MK
FOR EACH ROW
DECLARE
	tSrc_View	VARCHAR2(61) := UPPER(TRIM(:new.SRC_VIEW));
	tDst_Table	VARCHAR2(61) := UPPER(TRIM(:new.DST_TABLE));
	tTest_SQL	VARCHAR2(2000);
BEGIN
	VPI.WASH_ENGINE.CHECK_ISTR_TYPE(DBMS_UTILITY.FORMAT_CALL_STACK, :new.ISTR_ID);

	IF tSrc_View != :new.SRC_VIEW THEN
		:new.SRC_VIEW := tSrc_View;
	END IF;

	IF tDst_Table != :new.DST_TABLE THEN
		:new.DST_TABLE := tDst_Table;
	END IF;

	:new.SRC_FILTER			:= TRIM(:new.SRC_FILTER);
	:new.SRC_KEY_COLUMNS	:= UPPER(TRIM(:new.SRC_KEY_COLUMNS));
	:new.DST_KEY_COLUMNS	:= UPPER(TRIM(:new.DST_KEY_COLUMNS));
	:new.DST_VAL_COLUMNS	:= UPPER(TRIM(:new.DST_VAL_COLUMNS));
	:new.SRC_VALUES			:= TRIM(:new.SRC_VALUES);

	tTest_SQL	:= UTL_LMS.FORMAT_MESSAGE('INSERT INTO %s (%s%s) SELECT %s%s FROM %s WHERE 1 = 0',
		tDst_Table, :new.DST_KEY_COLUMNS, VPI.WASH_ENGINE.CONCAT_STRING(', ', :new.DST_VAL_COLUMNS),
		:new.SRC_KEY_COLUMNS, VPI.WASH_ENGINE.CONCAT_STRING(', ', :new.SRC_VALUES), tSrc_View);

	IF :new.SRC_FILTER IS NOT NULL THEN
		tTest_SQL	:= tTest_SQL || UTL_LMS.FORMAT_MESSAGE(' AND (%s)', :new.SRC_FILTER);
	END IF;

	EXECUTE IMMEDIATE tTest_SQL;
END;
/

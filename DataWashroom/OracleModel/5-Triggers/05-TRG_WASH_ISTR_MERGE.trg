CREATE OR REPLACE TRIGGER VPI.TRG_WASH_ISTR_MERGE
BEFORE INSERT OR UPDATE ON VPI.WASH_ISTR_MERGE
FOR EACH ROW
DECLARE
	tSrc_View	VARCHAR2(61) := UPPER(TRIM(:new.SRC_VIEW));
	tDst_Table	VARCHAR2(61) := UPPER(TRIM(:new.DST_TABLE));
	tMtch_Cols	VARCHAR2(1024);
BEGIN
	VPI.WASH_ENGINE.CHECK_ISTR_TYPE(:new.ISTR_ID, 'MERGE');

	IF tSrc_View != :new.SRC_VIEW THEN
		:new.SRC_VIEW := tSrc_View;
	END IF;

	IF tDst_Table != :new.DST_TABLE THEN
		:new.DST_TABLE := tDst_Table;
	END IF;

	:new.JOIN_COLUMNS	:= UPPER(TRIM(:new.JOIN_COLUMNS));
	:new.UPDATE_COLUMNS	:= UPPER(TRIM(:new.UPDATE_COLUMNS));
	:new.INSERT_COLUMNS	:= UPPER(TRIM(:new.INSERT_COLUMNS));

	IF :new.UPDATE_COLUMNS IS NULL THEN
		tMtch_Cols := :new.JOIN_COLUMNS;
	ELSE
		tMtch_Cols := :new.JOIN_COLUMNS || ', ' || :new.UPDATE_COLUMNS;
	END IF;

	IF :new.SRC_FILTER IS NULL THEN
		EXECUTE IMMEDIATE UTL_LMS.FORMAT_MESSAGE('SELECT %s FROM %s WHERE 1 = 0', tMtch_Cols, tSrc_View);
	ELSE
		EXECUTE IMMEDIATE UTL_LMS.FORMAT_MESSAGE('SELECT %s FROM %s WHERE (%s) AND 1 = 0', tMtch_Cols, tSrc_View, :new.SRC_FILTER);
	END IF;

	EXECUTE IMMEDIATE UTL_LMS.FORMAT_MESSAGE('SELECT %s FROM %s WHERE 1 = 0', tMtch_Cols, tDst_Table);

	IF :new.INSERT_COLUMNS != '*' THEN
		EXECUTE IMMEDIATE UTL_LMS.FORMAT_MESSAGE('SELECT %s FROM %s WHERE 1 = 0', :new.INSERT_COLUMNS, tSrc_View);
		EXECUTE IMMEDIATE UTL_LMS.FORMAT_MESSAGE('SELECT %s FROM %s WHERE 1 = 0', :new.INSERT_COLUMNS, tDst_Table);
	END IF;
END;
/
